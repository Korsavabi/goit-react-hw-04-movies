{"version":3,"sources":["Components/Header/Header.js","Components/ListItem/ListItem.js","Components/List/List.js","helpers/request.js","Conteiners/Home/Home.js","Conteiners/Users/Users.js","Conteiners/Repos/Repos.js","Components/SingleUser/SingleUser.js","App.js","index.js"],"names":["Header","AppBar","position","Toolbar","variant","to","className","ListItem","title","release_date","backdrop_path","overview","history","useHistory","onClick","push","src","alt","List","users","map","card","id","withCredentials","url","process","request","method","a","body","axios","result","Home","state","loader","error","search","page","perPage","totalItemCount","getUsers","updateUsers","errorToggle","loaderToggle","setState","status","this","type","color","height","width","timeout","Component","Users","Repos","SingleUser","App","console","log","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"ySAiCeA,G,MA1BA,WACX,OACI,8BACI,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,EAAA,EAAD,CAASC,QAAQ,QAAjB,UACI,cAAC,IAAD,CAASC,GAAG,IAAIC,UAAU,OAA1B,kBACA,cAAC,IAAD,CAASD,GAAG,SAASC,UAAU,OAA/B,mBACA,cAAC,IAAD,CAASD,GAAG,SAASC,UAAU,OAA/B,4B,wECQLC,G,YAlBE,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,SAEhDC,EAAUC,cAMhB,OACE,sBAAKP,UAAU,OAAOQ,QALG,WACzBF,EAAQG,KAAR,iBAAuBP,KAIvB,UACE,qBAAKF,UAAU,YAAYU,IAAKN,EAAeO,IAAI,KACnD,oBAAIX,UAAU,cAAd,SAA6BE,IAC7B,oBAAGF,UAAU,aAAb,mBAAiCG,KACjC,mBAAGH,UAAU,aAAb,SAA2BK,SCJlBO,EARF,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACb,OACE,qBAAKb,UAAU,YAAf,SACGa,EAAMC,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,eAA4BA,GAAbA,EAAKC,U,kCCNhCC,EAAkB,SAACC,GAC5B,MAAM,GAAN,OAAUA,EAAV,mBAAwBC,qCAGfC,EAAO,uCAAG,WAAOC,EAAQH,GAAf,6BAAAI,EAAA,6DAAoBC,EAApB,+BAA2B,KAA3B,SACEC,IAAMH,GAAQH,EAAKK,GADrB,cACbE,EADa,yBAGZA,GAHY,2CAAH,wDCoDLC,E,4MApDXC,MAAQ,CACJd,MAAO,GACPe,QAAQ,EACRC,OAAO,EACPC,OAAQ,GACRC,KAAM,EACNC,QAAS,EACTC,eAAgB,I,EAKpBC,S,sBAAW,8BAAAZ,EAAA,6DAGDJ,EAAMD,EAAgB,sEAHrB,kBAKkBG,EAAQ,MAAOF,GALjC,OAKGO,EALH,OAMH,EAAKU,YAAYV,EAAOA,QANrB,gDAQH,EAAKW,aAAY,GARd,yBAUH,EAAKC,cAAa,GAVf,4E,EAaXF,YAAc,SAACtB,GACX,EAAKyB,SAAS,CAAEzB,W,EAEpBwB,aAAe,SAACE,GACZ,EAAKD,SAAS,CAAEV,OAAQW,K,EAE5BH,YAAc,SAACG,GACX,EAAKD,SAAS,CAAET,MAAOU,K,kEAtBvBC,KAAKN,a,+BAyBC,IAAD,EAC6BM,KAAKb,MAA/Bd,EADH,EACGA,MAAOe,EADV,EACUA,OADV,EACkBC,MACvB,OACI,qCACKD,GAAU,cAAC,IAAD,CAAQa,KAAK,OACpBC,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,MAEb,cAAC,EAAD,CAAMhC,MAAOA,W,GA9CViC,aCKJC,EARD,WACV,OACI,8BACI,gDCKGC,EARD,WACV,OACI,8BACI,+CCKGC,EARI,WACf,OACI,8BACI,oDCsBGC,EAjBH,WAEV,OADAC,QAAQC,IAAIjC,oNAEV,sBAAKnB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqD,KAAK,IAAIC,OAAK,EAACC,UAAW7B,IACjC,cAAC,IAAD,CAAO2B,KAAK,SAASC,OAAK,EAACC,UAAWR,IACtC,cAAC,IAAD,CAAOM,KAAK,SAASC,OAAK,EAACC,UAAWP,IACtC,cAAC,IAAD,CAAOK,KAAK,eAAeE,UAAWN,IACtC,cAAC,IAAD,CAAUlD,GAAG,aCfrByD,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e3e508be.chunk.js","sourcesContent":["import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Toolbar variant=\"dense\">\r\n                    <NavLink to=\"/\" className=\"link\">Home</NavLink>\r\n                    <NavLink to=\"/users\" className=\"link\">Users</NavLink>\r\n                    <NavLink to=\"/repos\" className=\"link\">Repos</NavLink>\r\n\r\n                    {/* <Typography variant=\"h6\" color=\"inherit\">\r\n                    <NavLink to=\"/\" className=\"link\">Home</NavLink>\r\n                        <NavLink to=\"/users\" className=\"link\">Users</NavLink>\r\n                        <NavLink to=\"/repos\" className=\"link\">Repos</NavLink>\r\n                    </Typography> */}\r\n                    {/* <Typography variant=\"h6\" color=\"inherit\">\r\n                        Users\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" color=\"inherit\">\r\n                        Repos\r\n                    </Typography> */}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './ListItem.css'\r\n// import 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nconst ListItem = ({ title, release_date, backdrop_path, overview}) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const redirectToUserPage = () => {\r\n    history.push(`/users/${title}`)\r\n  }\r\n\r\n  return (\r\n    <div className='card' onClick={redirectToUserPage}>\r\n      <img className='card__img' src={backdrop_path} alt='' />\r\n      <h2 className='card__title'>{title}</h2>\r\n      <p className='card__text'>Data: {release_date}</p>\r\n      <p className='card__text'>{overview}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport './List.css';\r\nimport ListItem from '../ListItem/ListItem';\r\n\r\n\r\nconst List = ({users}) => {\r\n  return (\r\n    <div className='container'>\r\n      {users.map(card => <ListItem key={card.id} {...card} />)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n\r\n// import React, { Component } from 'react';\r\n// import axios from 'axios';\r\n// import { withCredentials, request } from '../../helpers/request'\r\n// import ListItem from '../ListItem/ListItem';\r\n// import Loader from 'react-loader-spinner'\r\n// import './List.css'\r\n// import Form from '../Form/Form'\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import Pagination from '@material-ui/lab/Pagination';\r\n\r\n// class List extends Component {\r\n//   state = {\r\n//     users: [],\r\n//     loader: true,\r\n//     error: false,\r\n//     message: '',\r\n//     page: 1,\r\n//     perPage: 9,\r\n//     totalItemCount: 20\r\n//   }\r\n//   updeteUsers = (users) => {\r\n//     this.setState({ users })\r\n//   }\r\n//   // loaderToggle = () => {\r\n//   //   this.setState(prev => ({\r\n//   //     loader: !prev.loader\r\n//   //   }))\r\n//   // }\r\n//   // errorToggle = (status) => {\r\n//   //   this.setState({ error: status })\r\n//   // }\r\n  // handleChange = (event, value) => {\r\n  //   this.setState({\r\n  //     page: value\r\n  //   })\r\n  // }\r\n//   // async componentDidMount(){\r\n//   //   const { page, perPage } = this.state;\r\n\r\n//   //   const url = withCredentials(`https://api.github.com/search/users?q=react&page=${page}&&per_page=${perPage}&`);\r\n//   //     try {\r\n//   //       const result = await request('get', url);\r\n//   //       this.setState({\r\n//   //         users: result.items,\r\n//   //       })\r\n//   //     } catch (error) {\r\n//   //       this.setState({\r\n//   //         error: true,\r\n//   //         loader: false,\r\n//   //         message: error\r\n//   //       })\r\n//   //     } finally {\r\n//   //       this.setState({\r\n//   //         loader: false,\r\n//   //       })\r\n//   //     }\r\n//   // }\r\n//   async componentDidUpdate(prevProps, prevState) {\r\n//     const { page, perPage } = this.state;\r\n//     if (page !== prevState.page) {\r\n//       const url = withCredentials(`https://api.github.com/search/users?q=react&page=${page}&&per_page=${perPage}&`);\r\n//       try {\r\n//         const result = await request('get', url);\r\n//         this.setState({\r\n//           users: result.items,\r\n//         })\r\n//       } catch (error) {\r\n//         this.setState({\r\n//           error: true,\r\n//           loader: false,\r\n//           message: error\r\n//         })\r\n//       } finally {\r\n//         this.setState({\r\n//           loader: false,\r\n//         })\r\n//       }\r\n//     }\r\n\r\n//   }\r\n\r\n//   render() {\r\n//     const { users, loader, error, page, totalItemCount, perPage } = this.state\r\n//     return (\r\n//       <>\r\n//         <Form onSubmit={this.updeteUsers} loaderToggle={this.loaderToggle} errorToggle={this.errorToggle} />\r\n//         <div className='container'>\r\n//           {error && <h1>Some error, try later</h1>}\r\n//           {loader && <Loader type=\"Puff\"\r\n//             color=\"#00BFFF\"\r\n//             height={100}\r\n//             width={100}\r\n//             timeout={3000} />}\r\n//           {!error && !loader && users.map(card => <ListItem key={card.id} {...card} />)}\r\n//         </div>\r\n//         <Pagination count={Math.floor(totalItemCount / perPage)} color=\"primary\" page={page} onChange={this.handleChange} />\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default List;","import axios from 'axios';\r\n\r\nexport const withCredentials = (url) => {\r\n    return `${url}api_key=${process.env.REACT_APP_CLIENT_KEY}`\r\n}\r\n\r\nexport const request = async (method, url, body = null) => {\r\n    const result = await axios[method](url, body);\r\n\r\n    return result;\r\n}","import React, { Component } from 'react';\r\nimport List from '../../Components/List/List';\r\nimport Loader from 'react-loader-spinner'\r\nimport { withCredentials, request } from '../../helpers/request'\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        users: [],\r\n        loader: true,\r\n        error: false,\r\n        search: '',\r\n        page: 1,\r\n        perPage: 9,\r\n        totalItemCount: 20\r\n    }\r\n    componentDidMount() {\r\n        this.getUsers()\r\n    }\r\n    getUsers = async () => {\r\n        // const { page, perPage } = this.state;\r\n\r\n        const url = withCredentials(`https://developers.themoviedb.org/3/trending/get-trending/all/day?`);\r\n        try {\r\n            const result = await request('get', url);\r\n            this.updateUsers(result.result)\r\n        } catch (error) {\r\n            this.errorToggle(true)\r\n        } finally {\r\n            this.loaderToggle(false)\r\n        }\r\n    }\r\n    updateUsers = (users) => {\r\n        this.setState({ users })\r\n    }\r\n    loaderToggle = (status) => {\r\n        this.setState({ loader: status })\r\n    }\r\n    errorToggle = (status) => {\r\n        this.setState({ error: status })\r\n    }\r\n\r\n    render() {\r\n        const { users, loader, error, } = this.state;\r\n        return (\r\n            <>\r\n                {loader && <Loader type=\"Puff\"\r\n                    color=\"#00BFFF\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} />}\r\n                {/* <Form /> */}\r\n                <List users={users}/>\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst Users = () => {\r\n    return (\r\n        <div>\r\n            <h1> Users Page</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;\r\n// import React, { Component } from 'react';\r\n// // import Form from '../../Components/Form/Form';\r\n// import List from '../../Components/List/List';\r\n// import Loader from 'react-loader-spinner'\r\n// import { withCredentials, request } from '../../helpers/request'\r\n\r\n\r\n// class Users extends Component {\r\n//     state = {\r\n//         users: [],\r\n//         loader: true,\r\n//         error: false,\r\n//         search: '',\r\n//         page: 1,\r\n//         perPage: 9,\r\n//         totalItemCount: 20\r\n//     }\r\n//     componentDidMount() {\r\n//         this.getUsers()\r\n//     }\r\n//     getUsers = async () => {\r\n//         // const { page, perPage } = this.state;\r\n\r\n//         const url = withCredentials(`https://developers.themoviedb.org/3/trending/get-trending/all/day?`);\r\n//         try {\r\n//             const result = await request('get', url);\r\n//             this.updateUsers(result.result)\r\n//         } catch (error) {\r\n//             this.errorToggle(true)\r\n//         } finally {\r\n//             this.loaderToggle(false)\r\n//         }\r\n//     }\r\n//     updateUsers = (users) => {\r\n//         this.setState({ users })\r\n//     }\r\n//     loaderToggle = (status) => {\r\n//         this.setState({ loader: status })\r\n//     }\r\n//     errorToggle = (status) => {\r\n//         this.setState({ error: status })\r\n//     }\r\n\r\n//     render() {\r\n//         const { users, loader, error, } = this.state;\r\n//         return (\r\n//             <>\r\n//                 {loader && <Loader type=\"Puff\"\r\n//                     color=\"#00BFFF\"\r\n//                     height={100}\r\n//                     width={100}\r\n//                     timeout={3000} />}\r\n//                 {/* <Form /> */}\r\n//                 <List users={users}/>\r\n\r\n//             </>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Users;","import React from 'react';\r\n\r\nconst Repos = () => {\r\n    return (\r\n        <div>\r\n            <h1>Repos Page</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Repos;","import React from 'react';\r\n\r\nconst SingleUser = () => {\r\n    return (\r\n        <div>\r\n            <h1>SingleUser Page</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SingleUser;","import React from 'react';\n// import List from './Components/List/List';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport Home from './Conteiners/Home/Home';\nimport Users from './Conteiners/Users/Users';\nimport Repos from './Conteiners/Repos/Repos';\nimport SingleUser from './Components/SingleUser/SingleUser';\n\nconst App = () => {\n  console.log(process.env);\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route path='/' exact component={Home}></Route>\n        <Route path='/users' exact component={Users}></Route>\n        <Route path='/repos' exact component={Repos}></Route>\n        <Route path='/users/:name' component={SingleUser}></Route>\n        <Redirect to='/'/>\n      </Switch>\n      {/* <List /> */}\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}